class DBHelper{static RESTAURANTS_URL(e=""){return`/restaurants/${e}`}static REVIEWS_URL(e=""){return`/reviews/${e?`?restaurant_id=${e}`:""}`}static fetchQueuedReview(e,t){localforage.getItem(`review-${e}`).then(e=>{if(null===e)return t(!0);t(null,e)})}static submitQueuedReview(e,t){DBHelper.fetchQueuedReview(e,(a,r)=>{if(a)return t(null,r);DBHelper.submitReview(r,(a,r)=>{localforage.removeItem(`review-${e}`).then(()=>t(null,r)).catch(()=>t(!0))})})}static submitReview(e,t){localforage.setItem(`review-${e.restaurant_id}`,e).then(()=>{fetch(DBHelper.REVIEWS_URL(),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>e.json()).then(a=>{localforage.removeItem(DBHelper.REVIEWS_URL(e.restaurant_id)),localforage.removeItem(`review-${e.restaurant_id}`).then(()=>t(null,a))}).catch(()=>t(!0))})}static fetchRestaurantReviews(e,t){const a=DBHelper.REVIEWS_URL(e);localforage.getItem(a).then(e=>null===e?fetch(a).then(e=>e.json()).then(e=>(localforage.setItem(a,e),e)):e).then(e=>t(null,e)).catch(()=>t("Something went wrong",null))}static fetchOrGetCache(e,t){localforage.getItem(e).then(t=>null===t?fetch(e).then(e=>e.json()).then(t=>(localforage.setItem(e,t),t)):t).then(e=>t(null,e)).catch(()=>t("Something went wrong",null))}static fetchRestaurants(e){DBHelper.fetchOrGetCache(DBHelper.RESTAURANTS_URL(),e)}static fetchRestaurantById(e,t){DBHelper.fetchOrGetCache(DBHelper.RESTAURANTS_URL(e),t)}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((a,r)=>{a?t(a,null):t(null,r.filter(t=>t.cuisine_type==e))})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((a,r)=>{a?t(a,null):t(null,r.filter(t=>t.neighborhood==e))})}static fetchRestaurantByCuisineAndNeighborhood(e,t,a){DBHelper.fetchRestaurants((r,l)=>{if(r)a(r,null);else{let r=l;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),a(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,a)=>{if(t)e(t,null);else{const t=a.map(({neighborhood:e})=>e);e(null,[...new Set(t)])}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,a)=>{if(t)e(t,null);else{const t=a.map(({cuisine_type:e})=>e);e(null,[...new Set(t)])}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`./img/${e.photograph}.webp?id=${e.id}`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}